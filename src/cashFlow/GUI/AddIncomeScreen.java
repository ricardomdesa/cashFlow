/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cashFlow.GUI;

import Tables.AccountTable;
import Tables.CashFlowInfo;
import Tables.CategoryTable;
import Tables.IncomeTable;
import cashFlow.GUI.Renderers.ModifiedListRenderer;
import cashFlow.Listeners.ValuesChangeAction;
import cashFlow.Listeners.ValuesChangeEvent;
import db.Control.ModelControl;
import db.tableInterfaces.TableModel;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author f98877a
 */
public class AddIncomeScreen extends javax.swing.JFrame implements ValuesChangeAction {

    private List<TableModel> cat = new ArrayList();
    private AccountTable account;
    private ValuesChangeEvent vc;

    /**
     * Creates new form AddExpenseScreen
     */
    public AddIncomeScreen() {
        this.account = null;
        initComponents();
        setCategoryList();

        configScreenItens();

    }

    public AccountTable getAccount() {
        return account;
    }

    public void setAccount(AccountTable account) {
        this.account = account;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        incDescriptionTfd = new javax.swing.JTextField();
        incCategoryCbx = new javax.swing.JComboBox();
        incReceivedRBtn = new javax.swing.JRadioButton();
        incRepeatRBtn = new javax.swing.JRadioButton();
        incSaveBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        incDateTfd = new javax.swing.JFormattedTextField();
        incValueTfd = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Descrição");

        jLabel2.setText("Valor");

        jLabel3.setText("Categoria");

        incReceivedRBtn.setText("Recebido?");

        incRepeatRBtn.setText("Repetir?");

        incSaveBtn.setText("Salvar");
        incSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incSaveBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("R$");

        jLabel5.setText("Data");

        incDateTfd.setColumns(3);
        incDateTfd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        incDateTfd.setToolTipText("");

        incValueTfd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(96, 292, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(incReceivedRBtn)
                            .addComponent(incRepeatRBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(incSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addGap(50, 50, 50)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(incDescriptionTfd)
                                            .addComponent(incCategoryCbx, 0, 256, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(incValueTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(incDateTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(incDescriptionTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(incValueTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(incCategoryCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(incDateTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(incReceivedRBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(incRepeatRBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(incSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void incSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incSaveBtnActionPerformed

        // TODO add your handling code here:
        getAndSaveValues();
        vc.setValuesChanged(this);
        this.dispose();
    }//GEN-LAST:event_incSaveBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox incCategoryCbx;
    private javax.swing.JFormattedTextField incDateTfd;
    private javax.swing.JTextField incDescriptionTfd;
    private javax.swing.JRadioButton incReceivedRBtn;
    private javax.swing.JRadioButton incRepeatRBtn;
    private javax.swing.JButton incSaveBtn;
    private javax.swing.JFormattedTextField incValueTfd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables

    private void setCategoryList() {

        CategoryTable ret;
        try {
            cat = ModelControl.select(CategoryTable.class);
        } catch (SQLException ex) {
            Logger.getLogger(AddIncomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        incCategoryCbx.removeAllItems();
        for (TableModel cat1 : cat) {
            CategoryTable categ = (CategoryTable) cat1;

            if (categ.getType().equals(CashFlowInfo.CATEGORY_TYPE_IN)) {
                incCategoryCbx.addItem(categ);
            }
        }
        incCategoryCbx.setRenderer(new ModifiedListRenderer());
    }

    private void configScreenItens() {

        //payed check
        incReceivedRBtn.setSelected(true);

        //Value in currency
        DecimalFormat dFormat = new DecimalFormat("#,###,###.00");
        NumberFormatter pAmount = new NumberFormatter(dFormat);
        pAmount.setAllowsInvalid(false);
        incValueTfd.setFormatterFactory(new DefaultFormatterFactory(pAmount));

        //Date
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        DateFormatter d = new DateFormatter(dateFormat);
        incDateTfd.setFormatterFactory(new DefaultFormatterFactory(d));
        incDateTfd.setValue(new java.util.Date());

    }

    private void getAndSaveValues() {

        IncomeTable incomeTable = new IncomeTable();

        //Date values
        String date = incDateTfd.getText();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate parse = LocalDate.parse(date, dateFormatter);
        incomeTable.setDay(parse.getDayOfMonth());
        incomeTable.setMonth(parse.getMonthValue());
        incomeTable.setYear(parse.getYear());

        //Description
        if (!"".equals(incDescriptionTfd.getText())) {
            incomeTable.setDescription(incDescriptionTfd.getText());
        } else {
            JOptionPane.showMessageDialog(this, "Preencha a descrição");
        }

        //Category
        incomeTable.setCategory(((CategoryTable) incCategoryCbx.getSelectedItem()).getOid());

        //Value
        String value = incValueTfd.getText();
        value = value.replace(".", "");
        value = value.replace(",", ".");
        Double num = new Double(value);
        incomeTable.setValue(num);

        incomeTable.setReceived(incReceivedRBtn.isSelected());
        incomeTable.setRepeat(incRepeatRBtn.isSelected());

        account.setTotalIncome(account.getTotalExpense() + num); //update the account obj
        account.setValue(account.getValue() + num); //update the account obj

        if (account.getValue() >= 0) {
            account.setStatus(CashFlowInfo.POSITIVE);
        } else {
            account.setStatus(CashFlowInfo.NEGATIVE);
        }
        incomeTable.setAccOid(account.getOid());

        try {
            ModelControl.save(incomeTable);
        } catch (SQLException ex) {
            Logger.getLogger(AddIncomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ModelControl.update(account);
        } catch (SQLException ex) {
            Logger.getLogger(AddExpenseScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void setPanelToChange(ValuesChangeEvent panel) {
        this.vc = panel;
    }
}
