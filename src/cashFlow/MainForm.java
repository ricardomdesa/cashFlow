/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cashFlow;

import Tables.AccountTable;
import Tables.CashFlowInfo;
import Tables.ExpenseTable;
import Tables.IncomeTable;
import cashFlow.GUI.AddAccountScreen;
import cashFlow.GUI.AddScreen;
import cashFlow.GUI.Renderers.ModifiedListRenderer;
import cashFlow.GUI.StatementsScreen;
import cashFlow.Listeners.ValuesChangeAction;
import cashFlow.Listeners.ValuesChangeEvent;
import db.Control.ModelControl;
import db.tableInterfaces.TableModel;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author F98877A
 */
public class MainForm extends javax.swing.JFrame implements ValuesChangeEvent {

    TrayIcon trayIcon;
    SystemTray tray;
    AccountTable mainAccount = null;
    List accounts;
    AddScreen addScreen = new AddScreen();
    AddAccountScreen addAccountScreen = new AddAccountScreen();

    /**
     * Creates new form main
     */
    public MainForm() {

        super("CashFlow");

        initComponents();

        configScreenItens();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        accValueLbl = new javax.swing.JLabel();
        accTotIncomeLbl = new javax.swing.JLabel();
        accTotExpenseLbl = new javax.swing.JLabel();
        accountNameLbl = new javax.swing.JLabel();
        accListCbx = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        addButton.setForeground(new java.awt.Color(0, 0, 204));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel1.setText("Cash Flow");

        jLabel2.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        jLabel2.setText("Vis√£o geral");

        jLabel3.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        jLabel3.setText("Contas");

        jLabel4.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setText("Receitas");

        jLabel5.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Despesas");

        accValueLbl.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        accValueLbl.setText("R$ ");

        accTotIncomeLbl.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        accTotIncomeLbl.setForeground(new java.awt.Color(0, 153, 0));
        accTotIncomeLbl.setText("R$ ");
        accTotIncomeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                accTotIncomeLblMouseReleased(evt);
            }
        });

        accTotExpenseLbl.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        accTotExpenseLbl.setForeground(new java.awt.Color(255, 0, 0));
        accTotExpenseLbl.setText("R$ ");
        accTotExpenseLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                accTotExpenseLblMouseReleased(evt);
            }
        });

        accountNameLbl.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        accountNameLbl.setText(".");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(accListCbx, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addGroup(panelLayout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(18, 18, 18)
                                            .addComponent(accountNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel4)))
                                .addGap(57, 57, 57)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accTotIncomeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(accValueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(accTotExpenseLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(accValueLbl)
                    .addComponent(accountNameLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accListCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(accTotIncomeLbl))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(accTotExpenseLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(addButton)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if (mainAccount != null) {
            addScreen.setAccount(mainAccount);
        }
        addScreen.setVisible(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void accTotIncomeLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accTotIncomeLblMouseReleased
        // TODO add your handling code here:
        StatementsScreen screen = new StatementsScreen();
        screen.setDataType(new IncomeTable());
        screen.setPanelToChange(this);
        screen.setAccount(mainAccount);
        screen.configScreen();
        screen.setVisible(true);
    }//GEN-LAST:event_accTotIncomeLblMouseReleased

    private void accTotExpenseLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accTotExpenseLblMouseReleased
        // TODO add your handling code here:
        StatementsScreen screen = new StatementsScreen();
        screen.setDataType(new ExpenseTable());
        screen.setPanelToChange(this);
        screen.setAccount(mainAccount);
        screen.configScreen();
        screen.setVisible(true);
    }//GEN-LAST:event_accTotExpenseLblMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainForm m = new MainForm();
                m.setVisible(true);
                m.UpdateOverviewValues(CashFlowInfo.addScreenOp.ACCOUNT);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox accListCbx;
    private javax.swing.JLabel accTotExpenseLbl;
    private javax.swing.JLabel accTotIncomeLbl;
    private javax.swing.JLabel accValueLbl;
    private javax.swing.JLabel accountNameLbl;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables

    private void UpdateOverviewValues(CashFlowInfo.addScreenOp operation) {

        switch (operation) {
            case ACCOUNT:
                if (!isThereAccount()) {
                    addAccountScreen.setPanelToChange(this);
                    addAccountScreen.setVisible(true);
                } else {
                    mainAccount = (AccountTable) accListCbx.getSelectedItem();
                    addScreen.setAccount(mainAccount);
                }

                break;

            case EXPENSE:

                break;
            case INCOME:

                break;
            case UPDATE:
                mainAccount = (AccountTable) accListCbx.getSelectedItem();
                addScreen.setAccount(mainAccount);

                break;
            default:
                break;

        }
        if (mainAccount != null) {
            try {
                mainAccount = (AccountTable) ModelControl.load(AccountTable.class, mainAccount.getOid());
            } catch (SQLException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            accValueLbl.setText("R$ " + String.valueOf(mainAccount.getValue()));
            // preecher com uma consulta e soma dos valores por mes
            accTotExpenseLbl.setText(getTotalExpense());
            accTotIncomeLbl.setText(getTotalIncome());
        }
    }

    private boolean isThereAccount() {

        try {
            // reads the account list from DB
            accounts = ModelControl.select(AccountTable.class);

            //add the accounts obj at the jComboBox
            accListCbx.removeAllItems();
            accounts.stream().forEach((account) -> {
                accListCbx.addItem((AccountTable) account);
            });
            accListCbx.setRenderer(new ModifiedListRenderer());

            //ActionListener for the selected account in jComboBox
            accListCbx.addActionListener((ActionEvent e) -> {
                mainAccount = (AccountTable) accListCbx.getSelectedItem();
                UpdateOverviewValues(CashFlowInfo.addScreenOp.UPDATE);
            });
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return !(accounts.isEmpty());
    }

    @Override
    public void setValuesChanged(ValuesChangeAction panel, Object obj) {

        if (panel instanceof javax.swing.JFrame) {
            String childName = panel.getClass().getSimpleName();
            switch (childName) {
                case "AddAccountScreen":
                    UpdateOverviewValues(CashFlowInfo.addScreenOp.ACCOUNT);
                    break;
                case "AddExpenseScreen":
                    UpdateOverviewValues(CashFlowInfo.addScreenOp.EXPENSE);
                    break;
                case "AddIncomeScreen":
                    UpdateOverviewValues(CashFlowInfo.addScreenOp.INCOME);
                    break;
                default:
                    break;

            }
        }

    }

    private void configScreenItens() {
        setIconImage(Toolkit.getDefaultToolkit().getImage("LOCK.png"));
        addScreen.setPanelToChange(this);

        setLocationRelativeTo(null);

        accTotIncomeLbl.setToolTipText("Click aqui para ver as movimenta√ß√µes!");
        accTotExpenseLbl.setToolTipText("Click aqui para ver as movimenta√ß√µes!");

    }

    private String getTotalExpense() {
        List<TableModel> selectWithParam;
        double value = 0;
        try {
            selectWithParam = ModelControl.selectWithParam(ExpenseTable.class, LocalDate.now().getMonth().getValue(), mainAccount.getOid());
            for (TableModel tableModel : selectWithParam) {
                if (tableModel instanceof ExpenseTable) {
                    ExpenseTable expense = (ExpenseTable) tableModel;
                    value = value + expense.getValue();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        return String.valueOf("R$ " + value);

    }

    private String getTotalIncome() {
        List<TableModel> selectWithParam;
        double value = 0;
        try {
            selectWithParam = ModelControl.selectWithParam(IncomeTable.class, LocalDate.now().getMonth().getValue(), mainAccount.getOid());
            for (TableModel tableModel : selectWithParam) {
                if (tableModel instanceof IncomeTable) {
                    IncomeTable income = (IncomeTable) tableModel;
                    value = value + income.getValue();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        return String.valueOf("R$ " + value);

    }

}
